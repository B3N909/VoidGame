#version 330

in vec2 pass_textureCoords;

out vec4 out_Color;

uniform vec3 color;
uniform sampler2D fontAtlas;

float width = 0.5;
float edge = 0.1;

float borderWidth = 0.5;
float borderEdge = 0.4;

vec2 offset = vec2(-0.004, -0.004);

vec3 outlineColor = vec3(0.0, 0.0, 0.0);

uniform float hasDropshadow = 0;

void main(void)
{

	if(hasDropshadow == 0)
	{
		borderWidth = 0.0;
		offset = vec2(0.0, 0.0);
	}
	float distance = 1.0 - texture(fontAtlas, pass_textureCoords).a;
	float alpha = 1.0 - smoothstep(width, width + edge, distance);
	
	float distance2 = 1.0 - texture(fontAtlas, pass_textureCoords + offset).a;
	float outlineAlpha = 1.0 - smoothstep(borderWidth, borderWidth + borderEdge, distance2);
	
	float overallAlpha = alpha + (1.0 - alpha) * outlineAlpha;
	vec3 overralColor = mix(outlineColor, color, alpha / overallAlpha);
	
	out_Color = vec4(overralColor, overallAlpha);
}